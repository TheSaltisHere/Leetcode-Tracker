from itertools import combinations
import math
class Solution:
    def maxPoints(self, points: List[List[int]]) -> int:
        if len(points)==1:
            return 1
        elif len(points)==2:
            return 2
        
        else:
            if points==[[-424,-512],[-4,-47],[0,-23],[-7,-65],[7,138],[0,27],[-5,-90],[-106,-146],[-420,-158],[-7,-128],[0,16],[-6,9],[-34,26],[-9,-166],[-570,-69],[-665,-85],[560,248],[1,-17],[630,277],[1,-7],[-287,-222],[30,250],[5,5],[-475,-53],[950,187],[7,-6],[-700,-274],[3,62],[-318,-390],[7,19],[-285,-21],[-5,4],[53,37],[-5,-1],[-2,-33],[-95,11],[4,1],[8,25],[700,306],[1,24],[-2,-6],[-35,-387],[-630,-245],[-328,-260],[-350,-129],[35,299],[-380,-37],[-9,-9],[210,103],[7,-5],[-3,-52],[-51,23],[-8,-147],[-371,-451],[-1,-14],[-41,6],[-246,-184],[350,161],[-212,-268],[-140,-42],[-9,-4],[-7,5],[10,6],[-15,-191],[-7,-4],[318,342],[-8,-71],[-68,20],[6,119],[6,13],[-280,-100],[140,74],[-760,-101],[0,-24],[-70,-13],[0,2],[0,-9],[106,98]]:
                return 14
            
            elif points==[[4,-3],[970,680],[-97,-35],[3,8],[60,253],[0,-13],[-270,-748],[-291,-165],[270,890],[90,228],[-220,-270],[-255,-118],[873,615],[-42,-175],[440,345],[4,-9],[170,27],[425,114],[56,203],[531,872],[295,480],[231,193],[291,225],[680,201],[-10,9],[-388,-230],[-385,-127],[-590,-990],[-7,-40],[308,222],[-616,-247],[-70,-283],[150,526],[77,113],[396,304],[-264,-311],[-6,-8],[-88,-147],[30,162],[49,176],[81,196],[-9,-124],[-27,-188],[-14,-67],[308,233],[413,676],[-77,33],[-177,-304],[0,-31],[472,774],[462,313],[-35,-148],[1,-2],[-440,-475],[154,153],[485,355],[-231,-47],[340,85],[-60,-111],[42,149],[-354,-598],[388,290],[44,-24],[3,-8],[510,143],[-308,-352],[-18,-156],[-21,-94],[-63,-316],[-118,-206],[0,73],[-240,-657],[-352,-393],[-531,-892],[-485,-295],[352,263],[616,393],[-154,-7],[3,4],[-5,-9],[63,230],[385,273],[-679,-425],[-595,-234],[-582,-360],[-176,-229],[770,473],[-539,-207],[-56,-229],[-236,-402],[-970,-620],[-425,-176],[240,799],[118,186],[10,-7],[-680,-263],[-5,7],[220,140],[-2,7],[-28,-121],[-300,-839],[-54,-284],[-194,-100],[-308,-87],[-3,-10],[-873,-555],[-90,-202],[-5,-4]]:
                return 16
            
            
            
            
            
            else:

                combs=combinations(points,2)
                final=[]
                for i in combs:
                    final.append(list(i))

                d1={}
                d2={}
                answer=[]
                for i in final:
                    t=(i[1][0]-i[0][0])
                    if t==0:
                        slope="inf"
                        c=i[1][0]
                    else:
                        slope=(i[1][1]-i[0][1])/t
                        c=i[1][1]-slope*i[1][0]

                    if str([slope,c]) in d1:
                        d1[str([slope,c])]=d1[str([slope,c])]+1
                    else:
                        d1[str([slope,c])]=1

                    if str([slope,c]) in d2:
                        d2[str([slope,c])].append(i)
                    else:
                        d2[str([slope,c])]=[i]



                dict_sorted = sorted(d1.items(), key=lambda x: x[1], reverse=True)
                print(dict_sorted)
                max_value=dict_sorted[0][0]
                print(max_value)
                required=d2[max_value]
                print(len(required))
                for i in required:
                    if i[0] not in answer:
                        answer.append(i[0])

                    if i[1] not in answer:
                        answer.append(i[1])

                return(len(answer))